{"version":3,"sources":["components/Navbar.js","components/SNS.js","components/Intro.js","components/Photos.js","components/Loading.js","components/Articles.js","serviceWorker.js"],"names":["Navbar1","react_default","a","createElement","Navbar_default","bg","variant","Brand","href","Nav_default","className","Link","to","index_es","icon","faHome","faTools","faNewspaper","React","Component","SNS","Container_default","Row_default","Col_default","xs","md","xl","faGithubSquare","faLinkedin","faFileCode","Intro","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","ssj","text","Photos","Loading","Articles","__webpack_require__","n","lodash_debounce","InfiniteUsers_InfiniteUsers","_Component","InfiniteUsers","loadUsers","setState","isLoading","asyncToGenerator","regenerator_default","mark","_callee","response","results","nextUsers","wrap","_context","prev","next","fetch","sent","json","console","log","map","user","email","name","capitalize","first","last","join","photo","picture","medium","username","login","uuid","hasMore","users","length","concat","toConsumableArray","t0","error","message","stop","s","charAt","toUpperCase","slice","window","onscroll","lodash_debounce_default","_assertThisInitialize","assertThisInitialized","_assertThisInitialize2","innerHeight","document","documentElement","scrollTop","offsetHeight","inherits","createClass","key","value","_this$state","react","alt","src","Loading_Loading","src_components_Articles","src_App_0","App","apply","arguments","BrowserRouter","basename","Navbar_Navbar1","Route","exact","path","component","components_Home","Projects_Projects","addEventListener","location","hostname","swUrl","checkValidServiceWorker","match"],"mappings":"sXAOqBA,mLAEb,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,GAAG,OAAOC,QAAQ,QACtBL,EAAAC,EAAAC,cAACC,EAAAF,EAAOK,MAAR,CAAcC,KAAK,SAAnB,gBACAP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAKQ,UAAU,WACXT,EAAAC,EAAAC,cAACM,EAAAP,EAAIS,KAAL,KAAUV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,KAAIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAiBC,KAAMC,MAApC,UACVd,EAAAC,EAAAC,cAACM,EAAAP,EAAIS,KAAL,KAAUV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,aAAYX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAiBC,KAAME,MAA5C,cACVf,EAAAC,EAAAC,cAACM,EAAAP,EAAIS,KAAL,KAAUV,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAMC,GAAG,aAAYX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAiBC,KAAMG,MAA5C,uBAROC,IAAMC,gICsB5BC,UApBH,kBACRnB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,KACCD,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,KACCD,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAKsB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGhB,UAAU,SAChCT,EAAAC,EAAAC,cAAA,KAAGK,KAAK,mCAAkCP,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAiBC,KAAMa,QAErE1B,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAKsB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGhB,UAAU,SAChCT,EAAAC,EAAAC,cAAA,KAAGK,KAAK,4DAA2DP,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAiBC,KAAMc,QAE9F3B,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAKsB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGhB,UAAU,SAChCT,EAAAC,EAAAC,cAAA,KAAGK,KAAK,oCAAmCP,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAiBC,KAAMe,cCd5DC,cACjB,SAAAA,EAAYC,GAAO,IAAAC,SAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,KAAK,EACLC,KAAM,6/DCFGC,m+CCRAC,wjFCEfC,GAAWC,EACbC,EAAAC,ICLJC,GAAA,SAAAC,GAAA,SAAAC,EAAAnB,GAAA,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,IAAAlB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiB,GAAAZ,KAAAH,KAAAJ,KAAAoB,UAAA,WAAAnB,EAAAoB,SAAA,CAAAC,WAAA,GAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,EAAArD,EAAAsD,KAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAArD,EAAA2D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAC,MAAA,uDAAAP,EAAAI,EAAAI,KAAAJ,EAAAE,KAAA,EAAAN,EAAAS,OAAA,OAAAR,EAAAG,EAAAI,KAAAE,QAAAC,IAAAV,GAAAC,EAAAD,UAAAW,IAAA,SAAAC,GAAA,OAAAC,MAAAD,EAAAC,MAAAC,KAAA,CAAAzC,EAAA0C,WAAAH,EAAAE,KAAAE,OAAA3C,EAAA0C,WAAAH,EAAAE,KAAAG,OAAAC,KAAA,KAAAC,MAAAP,EAAAQ,QAAAC,OAAAC,SAAAV,EAAAW,MAAAD,SAAAE,KAAAZ,EAAAW,MAAAC,QAAAnD,EAAAoB,SAAA,CAAAgC,QAAApD,EAAAO,MAAA8C,MAAAC,OAAA,IAAAjC,WAAA,EAAAgC,MAAA,GAAAE,OAAAtD,OAAAuD,GAAA,EAAAvD,CAAAD,EAAAO,MAAA8C,OAAApD,OAAAuD,GAAA,EAAAvD,CAAA2B,MAAAE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA2B,GAAA3B,EAAA,SAAA9B,EAAAoB,SAAA,CAAAsC,MAAA5B,EAAA2B,GAAAE,QAAAtC,WAAA,6BAAAS,EAAA8B,SAAAnC,EAAAtB,KAAA,eAAAH,EAAA0C,WAAA,SAAAmB,GAAA,wBAAAA,EAAA,GAAAA,EAAAC,OAAA,GAAAC,cAAAF,EAAAG,MAAA,IAAAhE,EAAAO,MAAA,CAAAmD,OAAA,EAAAN,SAAA,EAAA/B,WAAA,EAAAgC,MAAA,IAAAY,OAAAC,SAAAC,KAAA,eAAAC,EAAAnE,OAAAoE,EAAA,EAAApE,QAAAoE,EAAA,EAAApE,CAAAD,IAAAmB,EAAAiD,EAAAjD,UAAAmD,EAAAF,EAAA7D,MAAAmD,EAAAY,EAAAZ,MAAArC,EAAAiD,EAAAjD,UAAA+B,EAAAkB,EAAAlB,QAAAM,GAAArC,IAAA+B,GAAAa,OAAAM,YAAAC,SAAAC,gBAAAC,YAAAF,SAAAC,gBAAAE,cAAAxD,KAAA,KAAAnB,EAAA,OAAAC,OAAA2E,EAAA,EAAA3E,CAAAiB,EAAAD,GAAAhB,OAAA4E,EAAA,EAAA5E,CAAAiB,EAAA,EAAA4D,IAAA,qBAAAC,MAAA,WAAA5E,KAAAgB,cAAA,CAAA2D,IAAA,SAAAC,MAAA,eAAAC,EAAA7E,KAAAI,MAAAmD,EAAAsB,EAAAtB,MAAAN,EAAA4B,EAAA5B,QAAA/B,EAAA2D,EAAA3D,UAAAgC,EAAA2B,EAAA3B,MAAA,OAAApF,EAAAC,EAAAC,cAAA,WAAAF,EAAAC,EAAAC,cAAA,sBAAAkF,EAAAf,IAAA,SAAAC,GAAA,OAAAtE,EAAAC,EAAAC,cAAA8G,EAAA,UAAAH,IAAAvC,EAAAU,UAAAhF,EAAAC,EAAAC,cAAA,WAAAF,EAAAC,EAAAC,cAAA,OAAAO,UAAA,aAAAT,EAAAC,EAAAC,cAAA,OAAA+G,IAAA3C,EAAAU,SAAAkC,IAAA5C,EAAAO,QAAA7E,EAAAC,EAAAC,cAAA,WAAAF,EAAAC,EAAAC,cAAA,cAAAoE,EAAAU,UAAAhF,EAAAC,EAAAC,cAAA,SAAAoE,EAAAE,MAAAxE,EAAAC,EAAAC,cAAA,SAAAoE,EAAAC,YAAAvE,EAAAC,EAAAC,cAAA,WAAAuF,GAAAzF,EAAAC,EAAAC,cAAA,WAAAuF,GAAArC,GAAApD,EAAAC,EAAAC,cAAAiH,EAAA,OAAAhC,GAAAnF,EAAAC,EAAAC,cAAA,0FAAA+C,EAAA,CAAA+D,EAAA,WAGAI,GAAA,kBAAApH,EAAAC,EAAAC,cAAA,OAAAO,UAAA,YAAAT,EAAAC,EAAAC,cAAA,+CAAAF,EAAAC,EAAAC,cAAA,0CAAAF,EAAAC,EAAAC,cAAA,mGAAAF,EAAAC,EAAAC,cAAA,sDAAAF,EAAAC,EAAAC,cAAA6C,GAAA,QAEAsE,GAAA,SAAArE,GAAA,SAAAsE,IAAA,OAAAtF,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,GAAAtF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsF,GAAAC,MAAArF,KAAAsF,YAAA,OAAAxF,OAAA2E,EAAA,EAAA3E,CAAAsF,EAAAtE,GAAAhB,OAAA4E,EAAA,EAAA5E,CAAAsF,EAAA,EAAAT,IAAA,SAAAC,MAAA,kBAAA9G,EAAAC,EAAAC,cAAAuH,EAAA,GAAAC,SAAA,IAAA1H,EAAAC,EAAAC,cAAA,OAAAO,UAAA,OAAAT,EAAAC,EAAAC,cAAAyH,EAAA,MAAA3H,EAAAC,EAAAC,cAAA,WAAAF,EAAAC,EAAAC,cAAA,OAAAO,UAAA,YAAAT,EAAAC,EAAAC,cAAA0H,EAAA,GAAAC,OAAA,EAAAC,KAAA,IAAAC,UAAAC,IAAAhI,EAAAC,EAAAC,cAAA0H,EAAA,GAAAC,OAAA,EAAAC,KAAA,YAAAC,UAAAE,IAAAjI,EAAAC,EAAAC,cAAA0H,EAAA,GAAAC,OAAA,EAAAC,KAAA,YAAAC,UAAAX,YAAAE,EAAA,CAAAN,EAAA,WA4BWkB,QACL,cADKA,OAAPC,SAAgCC,UAKJC,UAAxBC,0BAGAtC,OAAAmC,SAAAC,SAAAG,MAAA","file":"static/js/main.9c1dadfd.chunk.js","sourcesContent":["import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTools, faHome, faNewspaper } from '@fortawesome/free-solid-svg-icons'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Navbar1 extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">Chris Greene</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link><Link to='/'><FontAwesomeIcon icon={faHome} /> Home</Link></Nav.Link>\r\n                    <Nav.Link><Link to='/projects'><FontAwesomeIcon icon={faTools} /> Projects</Link></Nav.Link>\r\n                    <Nav.Link><Link to='/articles'><FontAwesomeIcon icon={faNewspaper} /> Articles</Link></Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithubSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons'\r\nimport { faFileCode } from '@fortawesome/free-regular-svg-icons'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport './SNS.css'\r\n\r\nconst SNS = () => (\r\n    <div>\r\n        <div>\r\n        \t<Container>\r\n\t        \t<Row>\r\n\t        \t\t<Col xs={4} md={4} xl={4} className=\"icons\">\r\n\t\t\t            <a href='https://github.com/luckydaypunk'><FontAwesomeIcon icon={faGithubSquare} /></a>\r\n\t\t\t        </Col>\r\n\t\t\t        <Col xs={4} md={4} xl={4} className=\"icons\">\r\n\t\t\t            <a href='https://www.linkedin.com/in/christopher-greene-401270ba/'><FontAwesomeIcon icon={faLinkedin} /></a>\r\n\t\t\t        </Col>\r\n\t\t\t        <Col xs={4} md={4} xl={4} className=\"icons\">\r\n\t\t\t            <a href='https://glitch.com/@luckydaypunk'><FontAwesomeIcon icon={faFileCode} /></a>\r\n\t\t\t        </Col>\r\n\t            </Row>\r\n        \t</Container>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default SNS","import React from 'react'\r\nimport Me from './me.jpg'\r\nimport Sayajin from './sayajin_me.jpg'\r\nimport './Intro.css'\r\nimport SNS from './SNS'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nexport default class Intro extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ssj: false,\r\n            text: 'Chris is a bilingual, full-stack developer with a passion for automation. He\\'s on the verge of writing a script to automate his automation.\\\r\n        Upon graduating from Dublin City University with a degree in Translation in 2013, he moved to Japan\\\r\n        to work as a Logistics Specialist, managing global trade routes for a major silicon wafer manufacturer. Yes, the not-so-delicious wafers used\\\r\n        to make  SSDs, CPUs, and essentially all techonology. After making the move to AWS in\\\r\n        2017, he has implemented many new technologies and contributed to numerous apps to increase the productivity of Data Center operations. In his free time, when he\\'s not whipping up\\\r\n        a nodeJs app, he finds himself clearing out his film backlogue, analyzing the dialogue in the Yakuza video game series or enjoying a nice craft beer.\\\r\n        He also can\\'t seem to finish any higher than 4th place in Tetris 99...',\r\n            expanded: false,\r\n        }\r\n        this.handleTruncate = this.handleTruncate.bind(this)\r\n        this.transform = this.transform.bind(this)\r\n    }\r\n\r\n    transform() {\r\n        this.setState({ ssj: !this.state.ssj })\r\n    }\r\n\r\n    handleTruncate() {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        });\r\n    }\r\n\r\n    truncate(source, size) {\r\n        return source.length > size ? source.slice(0, size - 1) : source;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='photos'>\r\n                <div>\r\n                    <Container>\r\n                        <img onClick={this.transform.bind(this)} className='myPhoto' src={this.state.ssj ? Sayajin : Me} alt=\"Chris\" />\r\n                        <h2>Welcome!</h2>\r\n                        <text>{this.state.expanded ? this.state.text : this.truncate(this.state.text, this.state.text.substr(200).indexOf(' ') + 201)}</text>\r\n                        {<span className='readMore' onClick={this.handleTruncate}>{this.state.expanded ? ' ...Show less' : ' ...Read more'}</span>}\r\n                        <br />\r\n                        <SNS />\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Coffee from './coffee.jpg'\r\nimport LondonBus from './LondonBus.JPG'\r\nimport Turing from './turing.jpg'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\nimport './Photos.css'\r\n\r\nexport default class Photos extends React.Component {\r\n\tconstructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            invertedCoffee: false,\r\n            invertedTuring: false,\r\n            invertedLondon: false,\r\n        }\r\n        this.invert = this.invert.bind(this)\r\n    }\r\n\r\n    invert(key) {\r\n        this.setState({[key]: !this.state[key] })\r\n    }\r\n\r\n\trender() {\r\n        return (\r\n\t\t    <div>\r\n\t\t    <br/>\r\n\t\t        <Container className='PhotographyDiv'>\r\n\t\t        \t<Row>\r\n\t\t\t        \t<Col md={12}>\r\n\t\t\t        \t\t<div className='photographyText'>I like playing with cameras too...</div>\r\n\t\t\t        \t</Col>\r\n\t\t        \t\t<Col xs={12} md={4}>\r\n\t\t\t        \t\t<Image className={`photography ${this.state.invertedCoffee ? 'inverted' : 'normal'}`} onClick={()=>this.invert('invertedCoffee')} src={Coffee} alt='Coffee' fluid/>\r\n\t\t\t        \t</Col>\r\n\t\t\t        \t<Col xs={12} md={4}>\r\n\t\t\t        \t\t<Image className={`photographyVert ${this.state.invertedTuring ? 'inverted' : 'normal'}`} onClick={()=>this.invert('invertedTuring')} src={Turing} alt='Turing Machine' fluid/>\r\n\t\t\t        \t</Col>\r\n\t\t\t        \t<Col xs={12} md={4}>\r\n\t\t\t        \t\t<Image className={`photography ${this.state.invertedLondon ? 'inverted' : 'normal'}`} onClick={()=>this.invert('invertedLondon')} src={LondonBus} alt='London Bus' fluid/>\r\n\t\t\t        \t</Col>\r\n\t\t\t        </Row>\r\n\t\t        </Container>\r\n\t\t    </div>\r\n\t\t)\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class Loading extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        text: 'Loading'\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      const stopper = this.state.text + '...';\r\n      this.interval = window.setInterval(() => {\r\n        this.state.text === stopper\r\n          ? this.setState(() => ({ text: 'Loading' }))\r\n          : this.setState((prevState) => ({ text: prevState.text + '.' }))\r\n      }, 300)\r\n    }\r\n    componentWillUnmount() {\r\n      window.clearInterval(this.interval);\r\n    }\r\n    render() {\r\n      return (\r\n        <p>\r\n          {this.state.text}\r\n        </p>\r\n      )\r\n    }\r\n  }","import React from 'react'\r\nimport './Articles.css'\r\nimport InfiniteUsers from './InfiniteUsers'\r\n\r\nconst Articles = () => (\r\n    <div className='articles'>\r\n        <p>Testing scrolling in ReactJS using <i>https://randomuser.me/api</i>.<br />\r\n        This could be replaced by a serverless Lambda API endpoint that connects to a snappy,<br />\r\n        no-sql DB with metadeta about articles.</p>\r\n        <InfiniteUsers />\r\n    </div>\r\n)\r\nexport default Articles","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}