{"version":3,"sources":["components/Navbar.js","components/Intro.js","components/Projects.js","serviceWorker.js","index.js"],"names":["Navbar1","react_default","a","createElement","Navbar_default","bg","variant","Brand","href","Nav_default","className","Link","to","index_es","icon","faHome","faTools","faNewspaper","React","Component","Intro","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","ssj","text","Projects","Loading","faGithubSquare","_this2","stopper","interval","window","setInterval","setState","prevState","key","value","clearInterval","src_components_Articles","src_App_0","_Component","App","apply","arguments","inherits","createClass","BrowserRouter","basename","Navbar_Navbar1","Route","exact","path","component","components_Home","Projects_Projects","react","Boolean","location","hostname","addEventListener","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.caac3e8b.chunk.js","sourcesContent":["import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTools, faHome, faNewspaper } from '@fortawesome/free-solid-svg-icons'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Navbar1 extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">Chris Greene</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link><Link to='/'><FontAwesomeIcon icon={faHome} /> Home</Link></Nav.Link>\r\n                    <Nav.Link><Link to='/projects'><FontAwesomeIcon icon={faTools} /> Projects</Link></Nav.Link>\r\n                    <Nav.Link><Link to='/articles'><FontAwesomeIcon icon={faNewspaper} /> Articles</Link></Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Me from './me.jpg'\r\nimport Sayajin from './sayajin_me.jpg'\r\nimport './Intro.css'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nexport default class Intro extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ssj: false,\r\n            text: 'Chris is a bilingual, full-stack developer with a current mission of bringing core coding principals to front-end web-apps.\\\r\n        (\\'cmon, nobody likes maintaining messy Javascript...). Upon graduating from Dublin City University with a degree in Translation in 2013, he moved to Japan\\\r\n        to work as a Logistics Specialist, managing global trade routes for the second largest silicon wafer manufacturer in the world. After making the move to AWS in\\\r\n        2017, he has implemented many new technologies and contributed to numerous apps to increase the productivity of Data Center operations. In his free time, when he\\'s not whipping up\\\r\n        a nodeJs app, he finds himself clearing out his film backlogue, analyzing the dialogue in the Yakuza video game series or enjoying a nice craft beer.',\r\n            expanded: false,\r\n        }\r\n        this.handleTruncate = this.handleTruncate.bind(this)\r\n        this.transform = this.transform.bind(this)\r\n    }\r\n\r\n    transform() {\r\n        this.setState({ ssj: !this.state.ssj })\r\n    }\r\n\r\n    handleTruncate() {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        });\r\n    }\r\n\r\n    truncate(source, size) {\r\n        return source.length > size ? source.slice(0, size - 1) : source;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='photos'>\r\n                <div>\r\n                    <Container>\r\n                        <img onClick={this.transform.bind(this)} className='myPhoto' src={this.state.ssj ? Sayajin : Me} alt=\"Chris\" />\r\n                        <h2>Welcome!</h2>\r\n                        <text>{this.state.expanded ? this.state.text : this.truncate(this.state.text, this.state.text.substr(200).indexOf(' ') + 201)}</text>\r\n                        {<span className='readMore' onClick={this.handleTruncate}>{this.state.expanded ? ' ...Show less' : ' ...Read more'}</span>}\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { faGithubSquare, faCodepen } from '@fortawesome/free-brands-svg-icons'\r\nimport { faFileCode } from '@fortawesome/free-regular-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './Projects.css'\r\nimport Weather from './Weather.js'\r\n\r\nexport default class Projects extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <span>Feel free to check out my Github repos, works on Glitch and Codepen profile below!</span>\r\n                    <div className='projectIcons'>\r\n                        <div>\r\n                            <a href='https://github.com/luckydaypunk'><FontAwesomeIcon icon={faGithubSquare} /></a>\r\n                            <div><a href='https://github.com/luckydaypunk'>Github</a></div>\r\n                        </div>\r\n                        <div>\r\n                            <a href='https://glitch.com/@luckydaypunk'><FontAwesomeIcon icon={faFileCode} /></a>\r\n                            <div><a href='https://glitch.com/@luckydaypunk'>Glitch</a></div>\r\n                        </div>\r\n                        <div>\r\n                            <a href='https://codepen.io/luckydaypunk/'><FontAwesomeIcon icon={faCodepen} /></a>\r\n                            <div><a href='https://codepen.io/luckydaypunk/'>CodePen</a></div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n                <div className='weatherBox'>\r\n                    <Weather />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}